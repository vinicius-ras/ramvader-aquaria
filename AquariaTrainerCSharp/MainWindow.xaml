<Window x:Class="AquariaTrainerCSharp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AquariaTrainerCSharp"
        xmlns:props="clr-namespace:AquariaTrainerCSharp.Properties"
        xmlns:comModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="{x:Static props:Resources.strMainWindowTitle}" Height="350" Width="550">
    <Window.Resources>
        <Style x:Key="styleVisibleWhenAttached" TargetType="{x:Type TypeName=FrameworkElement}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding GameMemoryIO.Attached}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>

                <!-- ALWAYS visible in design mode -->
                <Trigger Property="comModel:DesignerProperties.IsInDesignMode" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- This style disables cheats' checkboxes once the trainer gets detached from the game. -->
        <Style x:Key="styleUncheckOnDetachment" TargetType="CheckBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=GameMemoryIO.Attached}" Value="False">
                    <Setter Property="IsChecked" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <StackPanel Orientation="Vertical" Margin="3">
        <GroupBox Header="{x:Static props:Resources.strGroupBoxHeaderGameInfo}" Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="{x:Static props:Resources.strLblGamesProcessPrompt}" FontWeight="Bold" HorizontalAlignment="Right" Margin="3" />
                <DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="False" VerticalAlignment="Center" MinWidth="170" Margin="3">
                    <Label DockPanel.Dock="Left" Margin="0" Padding="0">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Content" Value="{x:Static props:Resources.strLblNotAttached}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=GameMemoryIO.Attached}" Value="True">
                                        <Setter Property="Content" Value="{Binding Path=GameMemoryIO.TargetProcess.MainModule.ModuleName}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="(" Margin="0" Padding="3,0,0,0" />
                    <Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="{x:Static props:Resources.strLblProcessIDPrompt}" Margin="0" Padding="0" />
                    <Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="{Binding Path=GameMemoryIO.TargetProcess.Id,FallbackValue={x:Static props:Resources.strNoneTag}}" Margin="0" Padding="3,0,0,0" />
                    <Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content=")" Margin="0" Padding="0" />
                </DockPanel>

                <Label Grid.Row="1" Grid.Column="0" Content="{x:Static props:Resources.strLblRequiredGameVersionPrompt}" FontWeight="Bold" Margin="3" />
                <Label Grid.Row="1" Grid.Column="1" Content="{x:Static props:Resources.strLblRequiredGameVersionValue}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" Padding="0" />

                <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Margin="3" Click="ButtonClickAttachToGame">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{x:Static props:Resources.strBtAttach}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=GameMemoryIO.Attached}" Value="True">
                                    <Setter Property="Content" Value="{x:Static props:Resources.strBtDetach}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static props:Resources.strGroupBoxHeaderCheats}" Margin="3">
            <StackPanel Orientation="Vertical">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="IsEnabled" Value="{Binding Path=GameMemoryIO.Attached}" />

                        <!-- ALWAYS enabled in design mode -->
                        <Style.Triggers>
                            <Trigger Property="comModel:DesignerProperties.IsInDesignMode" Value="True">
                                <Setter Property="IsEnabled" Value="True" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Content="{x:Static props:Resources.strChkCheatGodMode}" Margin="3" />
                <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Content="{x:Static props:Resources.strChkCheatInfiniteItemsUse}" Margin="3" />
                <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Content="{x:Static props:Resources.strChkCheatInfiniteItemsCook}" Margin="3" />
                <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Content="{x:Static props:Resources.strChkCheatInstantChargeAttacks}" Margin="3" />
                <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Content="{x:Static props:Resources.strChkCheatDualFormAttackHack}" Margin="3" />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="200"  />
                        <ColumnDefinition Width="auto" MinWidth="100" />
                    </Grid.ColumnDefinitions>

                    <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Grid.Row="0" Grid.Column="0" Content="{x:Static props:Resources.strChkCheatOverrideVelocity}" Margin="3" />
                    <Slider Name="sldPlayerVelocity" Grid.Row="0" Grid.Column="1" Margin="3" SmallChange="0.5" TickFrequency="0.5" Value="1" IsSnapToTickEnabled="True" />
                    <TextBlock Grid.Row="0" Grid.Column="2" MinWidth="60" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" Padding="3,0,0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding ElementName=sldPlayerVelocity,Path=Value,StringFormat={x:Static props:Resources.strLblTimesFasterFormat}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sldPlayerVelocity,Path=Value}" Value="0">
                                        <Setter Property="Text" Value="{x:Static props:Resources.strLblPlayerFrozen}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=sldPlayerVelocity,Path=Value}" Value="0.5">
                                        <Setter Property="Text" Value="{x:Static props:Resources.strLblSlowMotion}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=sldPlayerVelocity,Path=Value}" Value="1">
                                        <Setter Property="Text" Value="{x:Static props:Resources.strLblNormalSpeed}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <CheckBox Style="{StaticResource styleUncheckOnDetachment}" Grid.Row="1" Grid.Column="0" Content="{x:Static props:Resources.strChkCheatOverrideEnergyFormDamage}" Margin="3" />
                    <Slider Name="sldEnergyFormDamage" Grid.Row="1" Grid.Column="1" Margin="3" Maximum="50" />
                    <TextBlock Grid.Row="2" Grid.Column="2" MinWidth="60" VerticalAlignment="Center" HorizontalAlignment="Left"  Margin="3,0,0,0" Padding="3,0,0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding ElementName=sldEnergyFormDamage,Path=Value,StringFormat={x:Static props:Resources.strLblIncreasedDamageFormat}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sldEnergyFormDamage,Path=Value}" Value="0">
                                        <Setter Property="Text" Value="{x:Static props:Resources.strLblNormalDamage}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </StackPanel>
        </GroupBox>
    </StackPanel>
</Window>
